services:
  km_indexer:
      build: .
      container_name: km_indexer
      command: python index_pubmed.py bulk --n_min ${N_MIN} --n_max ${N_MAX}
      restart: no

      networks:
        - kmnet

      env_file:
        - .env

      environment:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        ELASTICSEARCH_URL: http://elasticsearch:9200

      depends_on:
        elasticsearch:
          condition: service_healthy
        postgres:
          condition: service_healthy

      security_opt:
        - no-new-privileges:true

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: km_indexer_elasticsearch
    restart: unless-stopped
    mem_limit: 512m

    volumes:
      - es_data:/usr/share/elasticsearch/data

    env_file:
      - .env

    environment:
      - node.name=es01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false

    networks:
      - kmnet

    healthcheck:
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:9200/
      start_interval: 5s
      interval: 17s
      start_period: 40s
      timeout: 2s
      retries: 2

    ulimits:
      memlock:
        soft: -1
        hard: -1

    security_opt:
      - no-new-privileges:true

  postgres:
      image: postgres:15-alpine
      container_name: km_indexer_postgres
      restart: unless-stopped

      volumes:
        - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        - ./allie_data:/var/lib/postgresql/data

      env_file:
        - .env

      networks:
        - kmnet

      healthcheck:
        test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
        start_interval: 3s
        interval: 19s
        start_period: 10s
        timeout: 2s
        retries: 2

      security_opt:
        - no-new-privileges:true

volumes:
  es_data:

networks:
  kmnet:
